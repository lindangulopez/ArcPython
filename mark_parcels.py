# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# mark_parcels.py
# Created on: 2020-05-06 15:04:11.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: mark_parcels <Old_Town_Location_Boundary> <Rivers> <Parcels> <Output_Data> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
Old_Town_Location_Boundary = arcpy.GetParameterAsText(0)

Rivers = arcpy.GetParameterAsText(1)

Parcels = arcpy.GetParameterAsText(2)

Output_Data = arcpy.GetParameterAsText(3)

# Local variables:
parcels_with_river_field = Output_Data
parcels_with_correct_side = Output_Data
parcels_with_default_river_value = parcels_with_river_field
parcels_with_default_side_value = parcels_with_correct_side
parcels_layer = "parcels_layer"
parcels_layer__2_ = parcels_layer
parcels_layer__3_ = parcels_layer
parcels_with_default_river_value__2_ = parcels_layer__2_
Non_River_Parcels = parcels_with_default_river_value__2_
copied_parcels_layer_Dissolv = "C:\\Users\\dsx.AD3\\Documents\\ArcGIS\\Default1.gdb\\copied_parcels_layer_Dissolv"
dissolved_polygon_layer = "dissolved_polygon_layer"
Correct_Side_Polygon = dissolved_polygon_layer
Correct_Side_on_Disk = "C:\\Users\\dsx.AD3\\Documents\\ArcGIS\\Default1.gdb\\copied_parcels_layer_Dissolv1"
parcels_layer__5_ = parcels_layer__3_

# Process: Copy Features
arcpy.CopyFeatures_management(Parcels, Output_Data, "", "0", "0", "0")

# Process: Add River Field
arcpy.AddField_management(Output_Data, "is_river", "SHORT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Default River Value
arcpy.CalculateField_management(parcels_with_river_field, "is_river", "0", "VB", "")

# Process: Add Correct Side Field
arcpy.AddField_management(Output_Data, "is_on_correct_side_of_river", "SHORT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Default Correct Side Value
arcpy.CalculateField_management(parcels_with_correct_side, "is_river", "0", "VB", "")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(parcels_with_default_river_value, parcels_layer, "", "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE;Input_FID Input_FID VISIBLE NONE;stat_centroid_elevation stat_centroid_elevation VISIBLE NONE;stat_max_elevation stat_max_elevation VISIBLE NONE;stat_min_elevation stat_min_elevation VISIBLE NONE;stat_max_slope stat_max_slope VISIBLE NONE;stat_min_slope stat_min_slope VISIBLE NONE;stat_centroid_distance_to_original_boundary stat_centroid_distance_to_original_boundary VISIBLE NONE;stat_max_floodplain_distance stat_max_floodplain_distance VISIBLE NONE;stat_min_floodplain_distance stat_min_floodplain_distance VISIBLE NONE;stat_max_major_road_distance stat_max_major_road_distance VISIBLE NONE;stat_min_major_road_distance stat_min_major_road_distance VISIBLE NONE;stat_max_protected_distance stat_max_protected_distance VISIBLE NONE;stat_min_protected_distance stat_min_protected_distance VISIBLE NONE;stat_max_rivers_distance_UA_0 stat_max_rivers_distance_UA_0 VISIBLE NONE;stat_min_rivers_distance_UA_0 stat_min_rivers_distance_UA_0 VISIBLE NONE;stat_max_rivers_distance_UA_1000 stat_max_rivers_distance_UA_1000 VISIBLE NONE;stat_min_rivers_distance_UA_1000 stat_min_rivers_distance_UA_1000 VISIBLE NONE;stat_max_rivers_distance_UA_10000 stat_max_rivers_distance_UA_10000 VISIBLE NONE;stat_min_rivers_distance_UA_10000 stat_min_rivers_distance_UA_10000 VISIBLE NONE;chosen chosen VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE;Shape_Area Shape_Area VISIBLE NONE;is_river is_river VISIBLE NONE")

# Process: Select Layer By Location
arcpy.SelectLayerByLocation_management(parcels_layer, "INTERSECT", Rivers, "", "NEW_SELECTION", "NOT_INVERT")

# Process: Calculate Default River Value (2)
arcpy.CalculateField_management(parcels_layer__2_, "is_river", "1", "VB", "")

# Process: Switch Selection to Non-River Parcels
arcpy.SelectLayerByLocation_management(parcels_with_default_river_value__2_, "INTERSECT", parcels_with_default_river_value__2_, "", "SWITCH_SELECTION", "NOT_INVERT")

# Process: Dissolve
arcpy.Dissolve_management(Non_River_Parcels, copied_parcels_layer_Dissolv, "is_river", "", "SINGLE_PART", "DISSOLVE_LINES")

# Process: Make Feature Layer (2)
arcpy.MakeFeatureLayer_management(copied_parcels_layer_Dissolv, dissolved_polygon_layer, "", "", "is_river is_river VISIBLE NONE")

# Process: Select Correct Side
arcpy.SelectLayerByLocation_management(dissolved_polygon_layer, "INTERSECT", Old_Town_Location_Boundary, "", "NEW_SELECTION", "NOT_INVERT")

# Process: Copy out Correct Side Polygon
arcpy.CopyFeatures_management(Correct_Side_Polygon, Correct_Side_on_Disk, "", "0", "0", "0")

# Process: Select Layer By Location (2)
arcpy.SelectLayerByLocation_management(parcels_layer, "INTERSECT", Correct_Side_on_Disk, "", "NEW_SELECTION", "NOT_INVERT")

# Process: Calculate Field
arcpy.CalculateField_management(parcels_layer__3_, "is_on_correct_side_of_river", "1", "PYTHON_9.3", "")

